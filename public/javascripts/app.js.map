{"version":3,"sources":["app/helper/imageHelper.coffee","app/routes/getHandler.coffee","app/routes/postHandler.coffee"],"names":[],"mappings":"AAAA;;AAAM;EACS;;wBAEb,YAAW,SAAC,KAAD;WAET,OAAO,CAAC,GAAR,CAAY,cAAZ;EAFS;;;;;;AAIb,MAAM,CAAC,OAAP,GAAiB;CCLjB;;AAAA,KAAK,QAAQ,IAAR;;AAEC;EACS;;;AAEb;;uBACA,gBAAe,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;IACb,EAAE,CAAC,QAAH,CAAY,eAAe,GAAG,CAAC,WAAnB,GAAiC,YAA7C,EAA2D,MAA3D,EAAmE,SAAC,GAAD,EAAM,IAAN;MACjE,IAAG,GAAH;QACE,KAAK,GAAL,EADF;OAAA;QAGE,GAAG,CAAC,IAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAX,CAAT;QACA,OAJF;;IADiE,CAAnE;EADa;;;;;;AAUjB,MAAM,CAAC,OAAP,GAAiB;CClBjB;;AAAA,KAAc,QAAQ,IAAR;;AACd,cAAc,QAAQ,uBAAR;;AAER;AAEJ;;;;EAAA,gBAAgB,SAAC,SAAD,EAAY,eAAZ;IACd,IAAG,eAAe,CAAC,cAAhB,CAA+B,SAA/B,CAAH;AACE,aAAO,eAAgB,YADzB;;EADc;;;AAKhB;;wBACA,gBAAe,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;AACb;IAAA,cAAc,IAAI,CAAC,KAAL,CAAW,EAAE,CAAC,YAAH,CAAgB,0BAAhB,EAA4C,MAA5C,CAAX;IACd,aAAa,WAAW,CAAC,QAAQ,CAAC,MAArB,CAA4B,SAAC,IAAD;aACvC,IAAI,CAAC,IAAL,KAAa,GAAG,CAAC;IADsB,CAA5B;IAGb,IAAG,OAAO,UAAP,KAAqB,WAAxB;MAEE,YAAgB;MAChB,SAAS,CAAC,SAAV,CAAoB,GAAG,CAAC,IAAI,CAAC,KAA7B;MAEA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAhB;MACA,mBAAmB,UAAW,GAAE,CAAC;MACjC,kBAAkB,GAAG,CAAC,IAAI,CAAC;MAC3B,iBAAiB,UAAW,GAAE,CAAC;AAE/B;QAEE,QAAQ,cAAc,SAAd,EAAyB,eAAzB;QACR,IAAG,OAAO,KAAP,KAAgB,WAAnB;UACE,kBAAkB,MAAM,MAD1B;;AAHF;MAKA,OAAO,CAAC,GAAR,CAAY,cAAZ;MACA,GAAG,CAAC,UAAJ,CAAe,GAAf,EAhBF;;IAiBA;EAtBa;;;;;;AAyBjB,MAAM,CAAC,OAAP,GAAiB","file":"public/javascripts/app.js","sourcesContent":["class ImageHelper\n  constructor: () ->\n\n  saveImage: (image) ->\n    #code for saving an image\n    console.log 'saving image'\n\nmodule.exports = ImageHelper\n","#/ <reference path=\"../typings/node/node.d.ts\"/>\n#/ <reference path=\"../typings/express/express.d.ts\" />\nfs = require('fs')\n\nclass GetHandler\n  constructor: () ->\n\n  ### Handle Incoming GET Requests ###\n  handleRequest: (req, res, next) ->\n    fs.readFile '/data/json' + req.originalUrl + '/info.json', 'utf8', (err, data) ->\n      if err\n        next err\n      else\n        res.json JSON.parse(data)\n        next()\n      return\n    return\n\nmodule.exports = GetHandler\n","fs          = require 'fs'\nimageHelper = require '../helper/imageHelper'\n\nclass PostHandler\n\n  getParamValue = (parameter, inputParameters) ->\n    if inputParameters.hasOwnProperty(parameter)\n      return inputParameters[parameter]\n    return\n\n  ### Handle Incoming GET Requests ###\n  handleRequest: (req, res, next) ->\n    fileContent = JSON.parse(fs.readFileSync('/data/json/services.json', 'utf8'))\n    arrayFound = fileContent.services.filter((item) ->\n      item.path == req.originalUrl\n    )\n    if typeof arrayFound != 'undefined'\n      #extract image\n      imgHelper = new imageHelper()\n      imgHelper.saveImage req.body.image\n      #perform parameter matching\n      console.log req.body\n      neededParameters = arrayFound[0].parameters\n      inputParameters = req.body.inputs\n      executablePath = arrayFound[0].executablePath\n      #loop through all needed parameters\n      for parameter of neededParameters\n        #find matching input parameter\n        value = getParamValue(parameter, inputParameters)\n        if typeof value != 'undefined'\n          executablePath += ' ' + value\n      console.log executablePath\n      res.sendStatus 200\n    next()\n    return\n\nmodule.exports = PostHandler\n"]}