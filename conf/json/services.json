{
  "services": [
    {
      "service": "multiscale",
      "path": "/ipd/multiscale",
      "executablePath": "/data/executables/multiscaleipdetector/multiscaleipdetector.jar",
      "programType": "java",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "inputImage": "",
        "threshold": "",
        "maxFeaturesPerScale": "",
        "detector": "",
        "blurSigma": "",
        "numScales": "",
        "numOctaves": ""
      }
    },
    {
      "service": "gabortextlinesegmentation",
      "path": "/segmentation/textline/gabor",
      "executablePath": "/data/executables/gabortextlinesegmentation/gabortextlinesegmentation.jar",
      "programType": "java",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "startUp": "create",
        "inputImage": "",
        "imageName": "",
        "matlabScriptsPath": "",
        "matlabPath": "",
        "linkingRectWidth": "",
        "linkingRectHeight": "",
        "highlighter":"rectangle"
      }
    },
    {
      "service": "gabortextlinesegmentation_split",
      "path": "/segmentation/textline/gabor/split",
      "programType": "java",
      "executablePath": "/data/executables/gabortextlinesegmentation/gabortextlinesegmentation.jar",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "startUp": "split",
        "polygon": ""
      }
    },
    {
      "service": "gabortextlinesegmentation_merge",
      "path": "segmentation/textline/gabor/merge",
      "programType": "java",
      "executablePath": "/data/executables/gabortextlinesegmentation/gabortextlinesegmentation.jar",
      "output":"console",
      "allowParallel": true,
      "parameters": {
        "startUp": "merge",
        "polygon1": "",
        "polygon2": ""
      }
    },
    {
      "service": "gabortextlinesegmentation_erase",
      "path": "/segmentation/textline/gabor/erase",
      "programType": "java",
      "executablePath": "/data/executables/gabortextlinesegmentation/gabortextlinesegmentation.jar",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "startUp": "delete",
        "polygon": ""
      }
    },
    {
      "service": "histogramtextlinesegmentation",
      "path": "/segmentation/textline/hist",
      "executablePath": "/data/executables/histogramtextlinesegmentation/histogramtextlinesegmentation.jar",
      "programType": "java",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "inputImage":"",
        "highlighter": "rectangle"
      }
    },
    {
      "service": "seamcuttextlinesegmentation",
      "path": "/segmentation/textline/seam",
      "executablePath": "/data/executables/seamcuttextlinesegmentation/seamcuttextlinesegmentation.jar",
      "programType": "java",
      "allowParallel": false,
      "output":"console",
      "parameters": {
        "matlabPath": "",
        "matlabScriptsPath":"",
        "inputImage": "",
        "outputFolder": "",
        "inputFileExtension": "",
        "highlighter":"rectangle"
      }
    },
    {
      "service": "noising",
      "path": "/noise",
      "executablePath": "/data/executables/noising/noising.jar",
      "programType": "java",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "noisingXmlFile": "",
        "inputImage": "",
        "outputFolder": "",
        "density": "",
        "strength":""
      }
    },
    {
      "service": "textblockextraction",
      "path": "/extraction/textblock",
      "executablePath": "/data/executables/textblockextraction/textblockextraction.jar",
      "programType": "java",
      "allowParallel": true,
      "output":"console",
      "parameters": {
        "inputImage": "",
        "maxVerBlockDist": "",
        "minVerBlockNbPixels": "",
        "minBlockWidth": "",
        "maxHorBlockDist": "",
        "minHorBlockNbPixels": "",
        "minBlockHeight": "",
        "border": ""
      }
    },
    {
      "service":"otsubinarization",
      "path":"/imageanalysis/binarization/otsu",
      "executablePath":"/data/executables/otsubinarization/otsubinarization.jar",
      "programType":"java",
      "allowParallel": true,
      "output":"file",
      "parameters":{
        "inputImage":"",
        "outputImage":"",
        "resultFile": ""
      }
    },
    {
      "service":"sauvolabinarization",
      "path":"/imageanalysis/binarization/sauvola",
      "executablePath":"/data/executables/sauvolabinarization/sauvolabinarization.jar",
      "programType":"java",
      "allowParallel": true,
      "output":"console",
      "parameters":{
        "inputImage":"",
        "outputFolder":""
      }
    },
    {
        "service":"cannyedgedetection",
        "path":"/imageanalysis/edge/canny",
        "executablePath":"/data/executables/cannyedgedetection/cannyedgedetection.jar",
        "programType":"java",
        "allowParallel": true,
        "output":"console",
        "parameters":{
          "inputImage":"",
          "outputFolder":""
        }
    },
    {
        "service":"histogramenhancement",
        "path":"/imageanalysis/enhancement/histogram",
        "executablePath":"/data/executables/histogramenhancement/histogramenhancement.jar",
        "programType":"java",
        "allowParallel": true,
        "output":"console",
        "parameters":{
          "inputImage":"",
          "outputFolder":"path to output folder"
        }
    },
    {
        "service":"sharpenenhancement",
        "path":"/imageanalysis/enhancement/sharpen",
        "executablePath":"/data/executables/sharpenenhancement/sharpenenhancement.jar",
        "programType":"java",
        "allowParallel": true,
        "output":"console",
        "parameters":{
          "inputImage":"",
          "outputFolder":"",
          "sharpLevel":""
        }
    },
    {
      "service":"ocropybinarization",
      "path":"/ocropy/binarization",
      "executablePath":"/data/executables/ocropybinarize/ocropybinarize.coffee",
      "programType":"coffeescript",
      "allowParallel": true,
      "output":"console",
      "parameters":{
        "inputImage":"",
        "outputFolder":""
      }
    },
    {
      "service":"ocropypageseg",
      "path":"/ocropy/pageseg",
      "executablePath":"/data/executables/ocropypageseg/ocropypageseg.coffee",
      "programType":"coffeescript",
      "allowParallel": true,
      "output":"console",
      "parameters":{
        "inputImage":"",
        "outputFolder":"",
        "host":"",
        "imageRootPath":""
      }
    },
    {
      "service":"ocropyrecognize",
      "path":"/ocropy/recognize",
      "executablePath":"/data/executables/ocropyrecognize/ocropyrecognize.coffee",
      "programType":"coffeescript",
      "allowParallel": true,
      "output":"console",
      "parameters":{
        "inputImage":"",
        "outputFolder":"",
        "ocropyLanguageModelsPath":"",
        "languageModel":""
      }
    },
    {
      "service": "bin2poly",
      "path": "/segmentation/polygon",
      "executablePath": "/data/executables/bin2poly/bin2poly-1.0.jar",
      "programType": "java",
      "allowParallel": true,
      "output":"file",
      "parameters": {
        "inputImage": "",
        "resultFile": "",
        "tightness":""
      }
    },
    {
      "service":"imageInverting",
      "path":"/imageanalysis/binarization/invert",
      "executablePath":"/data/executables/imageInverter/imageInverter.jar",
      "programType":"java",
      "allowParallel": true,
      "output":"file",
      "parameters":{
        "inputImage":"",
        "outputFolder":"",
        "resultFile": ""
      }
    },
    {
      "service":"tesseractOcr",
      "path":"/ocr/tesseract",
      "executablePath":"/data/executables/tesseractocr/tesseractocr.coffee",
      "programType":"coffeescript",
      "allowParallel": true,
      "output":"file",
      "parameters":{
        "inputImageUrl":"",
        "resultFile": "",
        "inputImage":""
      }
    }
  ]
}
